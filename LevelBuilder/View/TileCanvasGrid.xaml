<UserControl
    x:Class="LevelBuilder.View.TileCanvasGrid"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:view="clr-namespace:LevelBuilder.View"
    xmlns:common="clr-namespace:LevelBuilder.Common"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="300"
    
    >
    <UserControl.Resources>
        
        <SolidColorBrush x:Key="BackgroundBrush" Color="#FF606060"/>
        <SolidColorBrush x:Key="PaletteItemBorderBrush" Color="#FF606060"/>
        <SolidColorBrush x:Key="PaletteItemHightLightBorderBrush" Color="#ffffcc33"/>
        <SolidColorBrush x:Key="PaletteItemHightLightBackground" Color="#11ffcc33"/>
        
        

        
        <Style x:Key="TileCanvaseGridStyle" TargetType="ItemsControl">
            <Setter Property="BorderThickness" Value="0"/>
            <!--<Setter Property="OverridesDefaultStyle" Value="True"/>-->

            <!--<Setter Property="SelectionMode" Value="Single" />-->
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{StaticResource PaletteItemBorderBrush}"/>
        </Style>
        
        <Style x:Key="TileCanvasCellItem" TargetType="{x:Type view:TileCanvasCell}">
            <Setter Property="Margin" Value="0"/>
            <!--<Setter Property="Padding" Value="0"/>-->
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="Width" Value="32"/>
            <!--<Setter Property="HorizontalContentAlignment" Value="Stretch" />-->
            <!--<Setter Property="VerticalContentAlignment" Value="Stretch" />-->
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="ClipToBounds" Value="True"/>
            <!--<Setter Property="Background" Value="Transparent"/>-->
            <!--<Setter Property="BorderBrush" Value="{StaticResource PaletteItemBorderBrush}"/>-->
                     
            <EventSetter Event="MouseLeftButtonDown" Handler="TileCanvasCell_MouseLeftButtonDown"/>
            <EventSetter Event="MouseLeftButtonUp" Handler="TileCanvasCell_MouseLeftButtonUp"/>
            <EventSetter Event="MouseEnter" Handler="TileCanvasCell_MouseEnter"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type view:TileCanvasCell}">
                        <Grid>
                            <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                x:Name="content" />
                            
                            <AdornerDecorator>
                                <Rectangle
                                    x:Name="cellbd"
                                    Stroke="{StaticResource PaletteItemBorderBrush}"
                                    Fill="Transparent"
                                    StrokeThickness="1" 
                                    StrokeDashArray="1 2" 
                                    />
                                <!--MouseLeftButtonDown="cellbd_MouseLeftButtonDown"
                                    MouseEnter="cellbd_MouseEnter"-->
                            </AdornerDecorator>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="cellbd" Property="Fill" Value="{StaticResource PaletteItemHightLightBackground}"/>
                                <Setter TargetName="cellbd" Property="Stroke" Value="{StaticResource PaletteItemHightLightBorderBrush}"/>
                                <Setter TargetName="cellbd" Property="StrokeDashArray" Value="1 0"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource PaletteItemHightLightBorderBrush}"/>
                                <Setter TargetName="cellbd" Property="StrokeDashArray" Value="1 0"/>
                                <Setter TargetName="cellbd" Property="StrokeThickness" Value="2"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TileCanvasRow" TargetType="{x:Type view:TileCanvasRow}">
            <!--<Setter Property="Height" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type view:TileCanvasGrid}}, Path=RowHeight}"/>-->
            <!--<Setter Property="Padding" Value="0"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush" Value="{StaticResource PaletteItemBorderBrush}"/>-->
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="ClipToBounds" Value="True"/>
            <Setter Property="Margin" Value="0,0,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type view:TileCanvasRow}">
                        <Grid>
                                <!--SelectionChanged="rowlistbox_Selected"-->
                            <view:TileCanvasCellCollection
                                x:Name="rowlistbox"
                                Style="{StaticResource TileCanvaseGridStyle}"
                                Focusable="False"
                                ScrollViewer.CanContentScroll="False"
                                ScrollViewer.HorizontalScrollBarVisibility="Hidden" 
                                ScrollViewer.VerticalScrollBarVisibility="Hidden"
                                ItemsSource="{TemplateBinding DataContext}"
                                ItemContainerStyle="{StaticResource TileCanvasCellItem}"
                                ItemTemplateSelector="{Binding RelativeSource={RelativeSource AncestorType={x:Type view:TileCanvasGrid}}, Path=ItemTemplateSelector}">
                                <view:TileCanvasCellCollection.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal" IsItemsHost="True"/>
                                    </ItemsPanelTemplate>
                                </view:TileCanvasCellCollection.ItemsPanel>
                            </view:TileCanvasCellCollection>
                            <Rectangle
                                x:Name="rowbd"
                                Stroke="{StaticResource PaletteItemBorderBrush}"
                                StrokeThickness="1" 
                                StrokeDashArray="1 2" 
                                />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    
    <Grid DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type view:TileCanvasGrid}}}">
        
            <!--baselistbox_MouseLeftButtonDown-->
        <!--VirtualizingStackPanel.IsVirtualizing="True"
            VirtualizingStackPanel.VirtualizationMode="Recycling"-->
        <view:TileCanvasRowCollection 
            x:Name="baselistbox"
            Style="{StaticResource TileCanvaseGridStyle}"
            ItemsSource="{Binding ItemsSource}"
            ItemContainerStyle="{StaticResource TileCanvasRow}"
            MouseLeave="baselistbox_MouseLeave"
            >
            <view:TileCanvasRowCollection.ContextMenu>
                <ContextMenu>
                    
                </ContextMenu>
            </view:TileCanvasRowCollection.ContextMenu>
            <view:TileCanvasRowCollection.Template>
                <ControlTemplate TargetType="{x:Type view:TileCanvasRowCollection}">
                    <ScrollViewer
                        CanContentScroll="True"
                        IsDeferredScrollingEnabled="True"
                        HorizontalScrollBarVisibility="Auto"
                        Padding="0"
                        Focusable="False">
                        <ItemsPresenter />
                    </ScrollViewer>
                </ControlTemplate>
            </view:TileCanvasRowCollection.Template>
            <view:TileCanvasRowCollection.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel
                        VirtualizationMode="Recycling"
                        Orientation="Vertical"
                        IsItemsHost="True" />
                </ItemsPanelTemplate>
            </view:TileCanvasRowCollection.ItemsPanel>
            <!--<ListBox.ItemTemplate>
                <DataTemplate>
                    <ListBox
                        SelectionChanged="rowlistbox_Selected"
                        ScrollViewer.HorizontalScrollBarVisibility="Hidden" 
                        ScrollViewer.VerticalScrollBarVisibility="Hidden"
                        x:Name="rowlistbox"
                        Style="{StaticResource TileCanvaseGridStyle}"
                        ItemTemplate="{Binding RelativeSource={RelativeSource AncestorType={x:Type view:TileCanvasGrid}}, Path=ItemTemplate}"
                        ItemsSource="{Binding}"
                        ItemContainerStyle="{StaticResource TileCanvasItem}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel  Orientation="Horizontal" IsItemsHost="True"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ListBox>
                </DataTemplate>
            </ListBox.ItemTemplate>-->
        </view:TileCanvasRowCollection>
            
        <common:LoadingIndicator x:Name="fillloader" Visibility="Collapsed" IndicatorType="Enlarged" />
    </Grid>
</UserControl>
