<UserControl
    x:Class="LevelBuilder.Common.LoadingIndicator"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:common="clr-namespace:LevelBuilder.Common"
    xmlns:converters="clr-namespace:LevelBuilder.Converters"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="300"
    >
    <UserControl.Resources>
        
        
        <Storyboard x:Key="LoadingAnimation" RepeatBehavior="Forever">
            <DoubleAnimation
                Storyboard.TargetName="RotateTransform"
                Storyboard.TargetProperty="(RotateTransform.Angle)"
                From="0"
                To="360"
                BeginTime="0:0:0"
                Duration="0:0:2"
                FillBehavior="HoldEnd" />
        </Storyboard>
        
    </UserControl.Resources>
    <UserControl.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
            <BeginStoryboard x:Name="LoadingAnimationStoryboard" Storyboard="{StaticResource LoadingAnimation}" />
        </EventTrigger>
        <!--<EventTrigger RoutedEvent="FrameworkElement.SizeChanged">
            <BeginStoryboard x:Name="Animation2_BeginStoryboard" Storyboard="{StaticResource LoadingAnimation}" />
        </EventTrigger>-->
    </UserControl.Triggers>
    <Grid   
        DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type common:LoadingIndicator}}}"
        Visibility="{Binding IsLoading, Converter={converters:BooleanToVisibilityConverter}}">

        <Grid Visibility="{Binding IndicatorType, Converter={common:IndicatorTypeVisibilityConverter}, ConverterParameter={x:Static common:IndicatorType.Mini}}">
        <Viewbox
            x:Name="Main"
            Width="16"
            Height="16"
            RenderTransformOrigin="0.5,0.5">
            <Viewbox.RenderTransform>
                <RotateTransform Angle="0" x:Name="RotateTransform" />
            </Viewbox.RenderTransform>
            <Canvas
                Width="16"
                Height="16">
                <Canvas
                    Height="16"
                    Width="16"
                    x:Name="Clip"
                    Clip="M0,0 L11,0 8.125,7.9375 0,11 0,0 z">
                    <Path
                        x:Name="Path"
                        Width="16"
                        Height="16"
                        Canvas.Left="0"
                        Canvas.Top="0"
                        Stretch="Fill"
                        Data="M 8,0C 12.4167,0 16,3.58128 16,8C 16,12.4167 12.4167,16 8,16C 3.58128,16 0,12.4167 0,8C 0,3.58128 3.58128,0 7.999,0 Z M 8.03563,3.10969C 10.7359,3.10969 12.925,5.29871 12.925,7.99901C 12.925,10.6993 10.7359,12.8883 8.03563,12.8883C 5.33533,12.8883 3.14631,10.6993 3.14631,7.99901C 3.14631,5.29871 5.33533,3.10969 12.03563,3.10969 Z "
                        RenderTransformOrigin="0.5,0.5">
                        <Path.RenderTransform>
                    		<TransformGroup>
                    			<ScaleTransform/>
                    			<SkewTransform/>
                    			<RotateTransform Angle="-45"/>
                    			<TranslateTransform/>
                    		</TransformGroup>
                    	</Path.RenderTransform>
                    	
                        <Path.Fill>
                    		<LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    			<GradientStop Color="#FE686868" Offset="0.141"/>
                    			<GradientStop Color="#FFABABAB" Offset="0.355"/>
                    		</LinearGradientBrush>
                    	</Path.Fill>
                    </Path>
                </Canvas>
            </Canvas>
        </Viewbox>     
            
        </Grid>
        
        <Grid Visibility="{Binding IndicatorType, Converter={common:IndicatorTypeVisibilityConverter}, ConverterParameter={x:Static common:IndicatorType.Enlarged}}">
            
            <Border
                x:Name="Overlay"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Panel.ZIndex="5"
                Background="#77F1F1F1"
                >
            <Border
                x:Name="Indicator"
                BorderBrush="#FFCCCCCC"
                BorderThickness="1"
                Height="65"
                Width="130"
                HorizontalAlignment="Center"
                VerticalAlignment="Center">
                <Border
                    Background="#FFF1F1F1"
                    BorderThickness="1"
                    BorderBrush="#FFFFFFFF"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <TextBlock
                            FontSize="11"
                            Text="Loading..."
                            Margin="10,5"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Center"/>
                        <ProgressBar
                            Grid.Row="1"
                            IsIndeterminate="True"
                            Height="18"
                            Margin="10,5"
                            HorizontalAlignment="Stretch" />
                    </Grid>
                </Border>
            </Border>
        </Border>
        </Grid>
    </Grid>
</UserControl>
