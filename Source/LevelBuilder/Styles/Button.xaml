<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:resourceKeys="clr-namespace:LevelBuilder.Common.ResourceKeys">

    <SolidColorBrush x:Key="{x:Static resourceKeys:Button.ButtonFillColor}" Color="#FF606060" />
    <SolidColorBrush x:Key="{x:Static resourceKeys:Button.ButtonHoverFillColor}" Color="#FFC6C3C6" />
    <SolidColorBrush x:Key="{x:Static resourceKeys:Button.ButtonPressedFillColor}" Color="#FF999999" />
    <SolidColorBrush x:Key="{x:Static resourceKeys:Button.ButtonPressedBorderColor}" Color="#FF031A30" />

    
    <Style TargetType="{x:Type ButtonBase}">
        <Setter Property="Foreground" Value="{StaticResource {x:Static resourceKeys:Global.Foreground}}" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="{StaticResource {x:Static resourceKeys:Button.ButtonFillColor}}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border
                        x:Name="Bd"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        Padding="{TemplateBinding Padding}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true"/>
                                <Condition Property="IsEnabled" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource {x:Static resourceKeys:Button.ButtonHoverFillColor}}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="true"/>
                                <Condition Property="IsEnabled" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource {x:Static resourceKeys:Button.ButtonHoverFillColor}}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="true"/>
                                <Condition Property="IsEnabled" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource {x:Static resourceKeys:Button.ButtonPressedFillColor}}" />
                            
                        </MultiTrigger>
                        
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <Style
        x:Key="{x:Static ToolBar.ButtonStyleKey}"
        BasedOn="{StaticResource {x:Type ButtonBase}}"
        TargetType="{x:Type Button}" />
    
    <Style
        BasedOn="{StaticResource {x:Type ButtonBase}}"
        TargetType="{x:Type Button}" />
    
    <Style
        BasedOn="{StaticResource {x:Type ButtonBase}}"
        TargetType="{x:Type ToggleButton}" />
    
</ResourceDictionary>